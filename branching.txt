Git - Branching


--------------------------------------------------
Master - הענף הראשי אליו בסוף מופקדים כל הקומיטים |
--------------------------------------------------

-------------------------------------------------------------	
branch - מאפשר ליצור ענפים כדי להתנסות עם גרסאות של הפרוייקט |
-------------------------------------------------------------

git branch pic:
file:///C:/Users/guyr/Desktop/git%20guide/img/git%20Branching.png
	
1. git branch - מראה על איזה ענף נמצאים 

2. git branch branch_name - יוצר ענף חדש
						   כדאי ששם הענף יתאר את המטרה שלו
						   ברגע שיוצרים ענף הוא חולק את ההיסטוריה שלו עם המאסטר
						   לקומיטים על הענף אין השפעה על המאסטר
							
3.git checkout branch_name -  מחליף לאותו הענף

4.git merge branch_name - מאחד את הענף עם המאסטר
						  צריך לעבור קודם לענף המאסטר 

----------------------------------------------------------------
"fast forward" - בגלל שגיט מזהה את הענף עם הקומיט הכי עדכני גיט |
			   מריצה קדימה את המאסטר כדי לעדכן אותו בהתאם       |
----------------------------------------------------------------


successful merge - איחוד מוצלח יקרה ברגע שלא בוצעו קומיטים חדשים למאסטר מרגע יצירת הענף
				   גיט פשוט יודע לעדכן את המאסטר לפי השינויים בענף החדש.
					


merge conflict -   .קונפליקט קורה כאשר מפקידים משהו חדש למאסטר לפני שמאחדים אליו את הענפים
				    בנוסף, יכול לקרות מצב שבו הקומיט שהופקד למאסטר שינה בדיוק את אותו
				   .הטקסט שעבדו עליו בענף ההאחר
					כאשר מעבירים חזרה למאסטר ומבקשים לאחד את הענפים, גיט לא יודע אילו שינויים לשמור
					ואילו להשאיר. זהו הקונפליקט

                :הפקודות 

1. git branch

2. git branch branch_name

3. git checkout branch_name

4. git merge branch_name