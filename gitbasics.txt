Git - Basic

שלבי העבודה בגיט
			
git init ---> working directory -------> Staging Area -------------> Repository
								git add					git commit

working directory - תקיית העבודה
- הוספה של קבצים
- מחיקה
- שינוי

Staging Area - איזור היערכות
בו נמצאים  קבצים שמוכנים להפקדה

Repository - שינויים נשמרים למאגר באמצעות קומיט

1. git init - מתקין את הכלים של גיט בתקיית עבודה ומתחיל לעקוב אחרי שינויים
 
2. git status - מציג את מצב הקבצים 
	untracked files - קבצים שמופיעים באדום הם קבצים שגיט רואה אותם אך לא עוקב אחרי השינויים בהם
	
3. git add filename_1 filename_2...  - מוסיף קבצים לאיזור ההיערכות ומתחיל לעקוב אחרי שינויים בקבצים	
									   קבצים בצבע ירוק הם קבצים שתחת מעקב של גיט
										ניתן להוסיף כמה קבצים שרוצים לסטייג'ינג

4. git diff - מראה את ההבדלים בין הקובץ בתקיית עבודה לקובץ באיזור ההערכות
			  
5. git commit - השלב האחרון.
				מאחסן באופן קבוע את השינויים מאיזור ההערכות במאגר
				git commit -m "Some msg" - מוסיף הודעה להפקדה

------------------------------------------------------------
SHA - קוד של 40 ספרות ואותיות שמזהים באופן ייחודי את הקומיט |
------------------------------------------------------------
				
6. git log - מראה את השינויים שנעשו באופן כרונולוגי
   :מציג את
	SHA
	מחבר הקומיט
	התאריך
	ההודעה
   
------------------------------------------------------			
HEAD commit - הקומיט שנמצאים עליו נקרא הד			  |
			  ברב המקרים הקומיט האחרון הוא ההד קומיט  |
-------------------------------------------------------

			  
7. git show HEAD - מראה את כל מה שהגיט לוג מציגה עבור ההד קומיט פלוס כל השינויים שהופקדו
		
8. git checkout HEAD filename - תחזיר את הקובץ בתקיית העבודה להראות בדיוק
							    כמו שהוא נראה לפני בקומיט האחרון
		
9. git reset HEAD filename - מחזירה את הקובץ להיות כמו שהוא היה בהד קומיט בסטייג'ינג
						     לא מחזירה אותו בתקיית עבודה

10. git reset commit_SHA -  SHAמקבלת 7 ספרות ראשונות של ה
							במקרה ועשינו טעות
							מחזירה את הקומיט שאנחנו רוצים להיות ההד קומיט

							
							





							
פקודות

1. git init
 
2. git status 

3. git add filename

4. git diff filename

5. git commit (option: -m)

6. git log

7. git show HEAD

8. git checkout HEAD filename