REST- representational State transfer
יצוגיות מצב העברה

API - Application programming interface - 
דרך לאפשר לרכיבי תוכנה לדבר אחד עם השני.

תוכנה א' api <-------------------- api  תוכנה ב'
					העברת מידע
תוכנה ב' api --------------------> api  תוכנה א'


למשל ישנו אובייקט A.
let objectA = {
name: 'Software component A
preferredLanguage: javascript
sayHi : function(){
return 'hey'
},
askme:function (question){
//קוד....
}
}


האובייקט מכיל מספר תכונות\פרופרטיז ומספר מתודות.
כדי לתקשר עם האובייקט או בשביל להשתמש בפונקצויונליות שלו צריך להשתמש בapi 


api יכול להיות כל דבר שמתקשר עם רכיבים של התוכנה.

איך api קשור לweb services?
-api הוא בשביל רכיבי התוכנה, דרך לתוכנה לתקשר עם תוכנה אחרת.

-web services - סט של חוקים וטכנולוגיות שמאפשרות ל2 או יותר רכיבים ברשת לדבר אחד עם השני.

בעיקרון:

web services הם בסה"כ api 

-לא כל api הוא web service

-REST API = REST WEB SERVICE


REST API - זה בסה"כ api שעובד לפי הספסיפיקציות של rest.
כלומר דרך של רכיבי תוכנה לתקשר על פי ארכיטקטורה\ סט חוקים  

web service מוגדר ע"פ מספר חוקים:

- איך רכיבי התוכנה ידברו?
-אילו הודעות הם ישלחו אחד לשני?
-איך בקשות ותשובות יטופלו?



שאלות שכל api חייב לענות עליהן:

1. איך הלקוח יכול להגיד לספק השירות איזו פעולה הוא רוצה לבצע?(למחוק, להוסיף,לערוך וכו'...)
2. איך הלקוח יכול להגיד לספק השירות על איזה מידע לבצע את הפעולה?

אם ברצוננו שהapi יהיה restful עלינו לענות ע"פ החוקים של rest

כיצד רסט עונה על 2 השאלות הללו?

1. המידע על המתודה צריך להתבטא דרך פעולת הhttp 
		

למשל, בשביל למחוק משהו ניתן להשתמש בפעולת get fl:
----------------------------------------------------------
  GET api/users/delete/:userid HTTP/1.1 - NOT RESTFUL	 |
    אך פעולה זו אינה אינטואטיבית 					     |
---------------------------------------------------------

במקום זאת ניתן להשתמש בארכיטקטורה של rest 

---------------------------------------------
DELETE api/users/:userid HTTP/1.1 - RESTful |
--------------------------------------------

דרך זו היא יותר אינטואטיבית מהראשונה, כלומר, קל יותר להבין מה הפעולה תהיה.


2. ע"פ רסט הסקופ שבו מתבצעת הפעולה ייוצג בuri.

/users/:userid HTTP/1.1
			|
			|
			-----> מידע על הscope - פעולה זו תתבצע ברמת היוזר הספיציפי הנ"ל.
			
Resource - ע"פ רסט, כל דבר שלקוח יכול לבצע פעולות עליו הוא משאב(ריסורס).
ולכל משאב יש uri ייחודי.


